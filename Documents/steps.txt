Wellcome. This is an basic overview about how to use Table Dependency. 

The SqlTableDependency class represents a notification dependency between an application and a SQL Server Table.

This component provides the low-level implementation creating the Queue and Service Broker. In this way SqlTableDependency class provides access to notifications without knowing anything about the underlying Service Broker infrastructure. 

Once a record changed happens, SqlTableDependency's event subscribers are notified.

Let's suppose we want to monitor the following table.
Every change on this table will generate an notification containing inserted, updated or deleted values.

Now we install the NuGet package.

Then we create a model class, mapping the table columns we are interested to get back from the database.

After, we create a SqlTableDependency instance, specifying the connection string and database table name: we wrap it within a using statement, in order to immediatelly drop queue and service broker once it will be disposed.

In the end, we subscribe our code to change event. Moreover, we add a handler for errors, justo to be sure to receive notifications when anything goes wrong.

Now we run the application: as you can see, database queue and service broker are created, as well as other objects. 

We manually modify some records in the database table: those changes are immediately reported back.

Once we dispose SqlTableDependency, all database objects created are removed. In case of disconnect abruptly, as when you are debugging and stop it, those object are not dropped immediatelly but after a default time of 3 minutes.

If you appreciated SqlTableDependenca, please rank us on Codeplex.
Enjoy.

